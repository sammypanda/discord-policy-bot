# functionality
import os
import database
from models import test

# discord
import discord
from discord.ext import commands

# variables
from dotenv import load_dotenv

load_dotenv()

# TODO: run checks to see if important env variables are set/set defaults

intents = discord.Intents.all()

bot = commands.Bot(command_prefix='!', intents=intents)

@bot.event
async def on_ready():
    if int(os.getenv('DEBUG_LEVEL')) >= 1:
        print("debug: on_ready() ran")
        # print(database.test_query())
        print(test.test_query())

@bot.hybrid_command()
async def objects(ctx, section=""):
    if (section == "" or section == "ctx"):
        await ctx.reply(f"ctx objects: {dir(ctx)}") # using ctx.respond apparently isn't valid with update
    else:
        await ctx.reply(f"object not found")

@bot.hybrid_command()
async def setup(ctx):
    failed = False
    
    try:
        await ctx.guild.create_text_channel("setup", reason="auto-generated by the policy bot", position=0, topic="Channel for configuring the loaded policies!")
    except Exception as e:
        await ctx.reply(f"Unable to generate setup channel: {e}")
        failed = True
    finally:
        if not failed:
            await ctx.reply(f"Generated setup channel!")

bot.run(os.getenv('BOT_TOKEN'))